running linux on efm32gg

==abstract

uClinux was installed on the EFM32GG
.
A Pong-like game was implemented
, using mmaped framebuffer for output
, and a custom driver for the GPIO gamepad for input
.

==introduction
=goal

The main goal of this excercise was to implement a driver for Linux for the same gamepad used in the previous excercises\cite{ex1}\cite{ex2}.
The driver should have the features nessesary for the game also developed for this excercise.

=The Game
The choice of game was the classic, Pong.
Pong is one of the first arcade games ever made.
The game is a minimalistic game of table tennis in two dimentions, with a top view.
Two players each have a pad on oposing edges of the screen that can be moved along the edge.
They compete to knock a ball past the pad of the oponent using their pad.
The ball bounces against the non-player sides and has constant velocity when not bouncing.
The game is thus more akin to air hockey with a large goal than table tennis.
See Figure \ref{fig:pong} for an illustration.

==What drives the game
When developing a game
, there is a need to identify what external factors drive the game.
While in play
, ball moves as time passes
and the pads move as time passes depending on the input for the players.
In this state, the game clearly only advances on time intervals.
It makes sense to use polling for input.
If the cost of the syscalls dominates, using input-change interrupts might help.

=The Driver
Unlike the situation in the previous excercises, the program now runs under the uClinux operating system.
To gain direct access to the hardware for the gamepad, software must run in kernel mode.

It is the role of a device driver to mediate access to hardware for unprivileged programs
, and ensure that multiple programs concurrently wishing for access do not interfere with each other.
The gamepad is purely an input device with no configuration.
Concurrent access is thus not a concern.

A driver in Linux communicates with user-space programs by exposing devices nodes which special files in the filesystem can be associated with.

Simple read was implemented by 
